name: Build EDOPro
on: [push, pull_request]
env:
  COVERS_URL: ${{ secrets.COVERS_URL }}
  DEPENDENCIES_BASE_URL: https://github.com/edo9300/edopro-vcpkg-cache/releases/latest/download
  DEPLOY_DIR: deploy
  DEPLOY_REPO: ${{ secrets.DEPLOY_REPO }}
  DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
  DISCORD_APP_ID: ${{ secrets.DISCORD_APP_ID }}
  FIELDS_URL: ${{ secrets.FIELDS_URL }}
  PICS_URL: ${{ secrets.PICS_URL }}
  UPDATE_URL: ${{ secrets.UPDATE_URL }}
jobs:
  Windows:
    runs-on: windows-2019
    env:
      DEPLOY_BRANCH: travis-windows
      TRAVIS_OS_NAME: windows
      DXSDK_DIR: /c/d3d9sdk/
      VCPKG_ROOT: /c/vcpkg2
      BUILD_CONFIG: release
      ARCH: x86
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_CACHE_ZIP_URL=$DEPENDENCIES_BASE_URL/installed_x86-windows-static.zip" >> $GITHUB_ENV
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Windows-vs2019:
    runs-on: windows-2019
    env:
      DEPLOY_BRANCH: travis-windows-2019
      TRAVIS_OS_NAME: windows
      DXSDK_DIR: /c/d3d9sdk/
      VCPKG_ROOT: /c/vcpkg2
      VS_GEN: vs2019
      BUILD_CONFIG: release
      ARCH: x86
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_CACHE_ZIP_URL=$DEPENDENCIES_BASE_URL/installed_x86-windows-static-vs2019.zip" >> $GITHUB_ENV
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  # Windows-vs2022:
    # runs-on: windows-2022
    # env:
      # DEPLOY_BRANCH: travis-windows-2022
      # TRAVIS_OS_NAME: windows
      # DXSDK_DIR: /c/d3d9sdk/
      # VCPKG_ROOT: /c/vcpkg2
      # VS_GEN: vs2022
      # BUILD_CONFIG: release
      # ARCH: x86
    # steps:
    # - name: Set custom env vars
      # shell: bash
      # run: |
        # echo "VCPKG_CACHE_ZIP_URL=$DEPENDENCIES_BASE_URL/installed_x86-windows-static-vs2022.zip" >> $GITHUB_ENV
    # - name: Add msbuild to PATH
      # uses: microsoft/setup-msbuild@v2
    # - uses: actions/checkout@v1
      # with:
        # ref: ${{ github.head_ref }}
        # repository: ${{github.event.pull_request.head.repo.full_name}}
        # fetch-depth: 1
    # - name: Install premake
      # shell: bash
      # run: ./travis/install-premake5.sh
    # - name: Install dependencies
      # shell: bash
      # run: ./travis/dependencies.sh
    # - name: Build
      # shell: bash
      # run: ./travis/build.sh
    # - name: Predeploy
      # shell: bash
      # run: ./travis/predeploy.sh
    # - name: Deploy
      # if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      # shell: bash
      # run: ./travis/deploy.sh
    # - name: Log Failure
      # uses: sarisia/actions-status-discord@v1
      # if: failure()
      # with:
        # nodetail: true
        # description: |
            # [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        # title: |

        # color: 0xff0000
        # webhook: ${{ secrets.DISCORD_WEBHOOK }}
        # avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        # username: Github

  Linux-gcc-7-5-0:
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    env:
      DEPLOY_BRANCH: travis-linux
      TRAVIS_OS_NAME: linux
      BUILD_CONFIG: release
      ARCH: x64
      PREMAKE_VERSION: 5.0.0-beta1
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_ROOT=$PWD/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_CACHE_7Z_URL=$DEPENDENCIES_BASE_URL/installed_x64-linux.7z" >> $GITHUB_ENV
    - name: Get apt packages
      shell: bash
      run: |
        apt update
        apt install sudo
        sudo apt remove libsqlite3-dev
        sudo apt install -y g++ build-essential curl p7zip-full p7zip-rar zip git
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1.12.0
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Linux-gcc-10-3-0:
    runs-on: ubuntu-22.04
    env:
      DEPLOY_BRANCH: travis-linux-gcc-10
      TRAVIS_OS_NAME: linux
      BUILD_CONFIG: release
      ARCH: x64
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_ROOT=$PWD/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_CACHE_7Z_URL=$DEPENDENCIES_BASE_URL/installed_x64-linux.7z" >> $GITHUB_ENV
    - name: Get apt packages
      shell: bash
      run: |
        sudo apt remove libsqlite3-dev
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      env:
        CC: gcc-10
        CXX: g++-10
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Linux-gcc-11:
    runs-on: ubuntu-22.04
    env:
      DEPLOY_BRANCH: travis-linux-gcc-11
      TRAVIS_OS_NAME: linux
      BUILD_CONFIG: release
      ARCH: x64
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_ROOT=$PWD/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_CACHE_7Z_URL=$DEPENDENCIES_BASE_URL/installed_x64-linux.7z" >> $GITHUB_ENV
    - name: Get apt packages
      shell: bash
      run: |
        sudo apt remove libsqlite3-dev
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      env:
        CC: gcc-11
        CXX: g++-11
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Linux-gcc-14:
    runs-on: ubuntu-24.04
    env:
      DEPLOY_BRANCH: travis-linux-gcc-14
      TRAVIS_OS_NAME: linux
      BUILD_CONFIG: release
      ARCH: x64
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_ROOT=$PWD/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_CACHE_7Z_URL=$DEPENDENCIES_BASE_URL/installed_x64-linux.7z" >> $GITHUB_ENV
    - name: Get apt packages
      shell: bash
      run: |
        sudo apt remove libsqlite3-dev
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      env:
        CC: gcc-14
        CXX: g++-14
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Linux-aarch64-gcc-7-5-0:
    runs-on: ubuntu-latest
    container: ubuntu:18.04
    env:
      DEPLOY_BRANCH: travis-linux-aarch64
      TRAVIS_OS_NAME: linux
      BUILD_CONFIG: release
      ARCH: arm64
      PREMAKE_VERSION: 5.0.0-beta1
      ACTIONS_ALLOW_USE_UNSECURE_NODE_VERSION: true
      ACTIONS_RUNNER_FORCE_ACTIONS_NODE_VERSION: node16
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_ROOT=$PWD/vcpkg" >> $GITHUB_ENV
        echo "VCPKG_CACHE_7Z_URL=$DEPENDENCIES_BASE_URL/installed_aarch64-linux.7z" >> $GITHUB_ENV
    - name: Get apt packages
      shell: bash
      run: |
        apt update
        apt install sudo
        sudo apt remove libsqlite3-dev
        sudo apt install -y g++ build-essential curl p7zip-full p7zip-rar zip git gcc-aarch64-linux-gnu g++-aarch64-linux-gnu binutils-aarch64-linux-gnu
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: |
        ./travis/dependencies.sh
    - name: Build
      env:
        CC: /usr/bin/aarch64-linux-gnu-gcc
        CXX: /usr/bin/aarch64-linux-gnu-g++
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Mac-os-cctools:
    strategy:
      fail-fast: false
      matrix:
        include:
          - deploy_name: osx-cctools
            package_name: installed_x64-osx-cctools.7z
            clang: x86_64-macosx
            compiler_arch: x86_64
            premake_arch: x64
          - deploy_name: osx-aarch64-cctools
            package_name: installed_aarch64-osx-cctools.7z
            clang: arm64-macosx
            compiler_arch: arm
            premake_arch: arm64
    runs-on: ubuntu-22.04
    env:
      DEPLOY_BRANCH: ${{ matrix.deploy_name }}
      TRAVIS_OS_NAME: linux
      VCPKG_ROOT: ./vcpkg2
      BUILD_CONFIG: release
      TARGET_OS: macosx
      ARCH: ${{ matrix.premake_arch }}
      CC: ${{ format('/opt/cctools/bin/{0}-clang', matrix.clang) }}
      CXX: ${{ format('/opt/cctools/bin/{0}-clang++', matrix.clang) }}
      AR: ${{ format('/opt/cctools/bin/{0}-apple-darwin11-ar', matrix.compiler_arch) }}
      LDFLAGS: /opt/cctools/darwin/libclang_rt.osx.a
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_CACHE_7Z_URL=$DEPENDENCIES_BASE_URL/${{ matrix.package_name }}" >> $GITHUB_ENV
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Download cctools
      run: |
        cd /opt
        wget https://github.com/edo9300/cctools-build/releases/download/preview/cctools.tar.xz
        tar xf cctools.tar.xz
        cd cctools/bin
        ln x86_64-apple-darwin11-lipo -s lipo
        ln llvm-install-name-tool -s install_name_tool
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - uses: actions/upload-artifact@v4
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      with:
        name: ${{ matrix.deploy_name }}
        path: ${{ format('bin/{0}/release/ygoprodll.app', matrix.premake_arch) }}
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Mac-os-universal-cctools:
    runs-on: ubuntu-latest
    env:
      DEPLOY_BRANCH: travis-osx-universal-cctools
      TRAVIS_OS_NAME: linux
      TARGET_OS: macosx
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs: [ Mac-os-cctools ]
    steps:
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Download lipo binary
      run: |
        wget https://github.com/edo9300/cctools-build/releases/download/preview/lipo
        chmod +x lipo
    - name: Download osx artifacts
      uses: actions/download-artifact@v4
    - name: Merge binaries
      shell: bash
      run: |
        ./lipo -create -output ygoprodll ./osx-aarch64-cctools/ygoprodll.app ./osx-cctools/ygoprodll.app
    - name: Move merged binary
      shell: bash
      run: |
        mkdir -p bin/release && cp ygoprodll bin/release/ygoprodll.app && chmod +x bin/release/ygoprodll.app
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Delete artifacts
      uses: geekyeggo/delete-artifact@v4
      with:
        name: |
            osx-aarch64-cctools
            osx-cctools
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Ios-cctools:
    strategy:
      fail-fast: false
      matrix:
        include:
          - deploy_name: ios-cctools
            package_name: installed_aarch64-ios-cctools.7z
            clang: arm64-iphoneos
            compiler_arch: arm
            triplet: arm64-ios
            premake_arch: arm64
            libclang_rt: libclang_rt.ios.a
          - deploy_name: ios-armv7-cctools
            package_name: installed_armv7-ios-cctools.7z
            clang: armv7-iphoneos
            compiler_arch: arm
            triplet: arm-ios
            premake_arch: armv7
            libclang_rt: libclang_rt.ios.a
          - deploy_name: iossim-x64-cctools
            package_name: installed_x64-iossim-cctools.7z
            clang: x86_64-iphonesimulator
            compiler_arch: x86_64
            triplet: x64-iossim
            premake_arch: x64-iossim
            libclang_rt: libclang_rt.iossim.a
    runs-on: ubuntu-latest
    env:
      DEPLOY_BRANCH: ${{ format('travis-{0}', matrix.deploy_name) }}
      TRAVIS_OS_NAME: linux
      VCPKG_ROOT: ./vcpkg2
      BUILD_CONFIG: release
      TARGET_OS: ios
      ARCH: ${{ matrix.premake_arch }}
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      CC: ${{ format('/opt/cctools/bin/{0}-clang', matrix.clang) }}
      CXX: ${{ format('/opt/cctools/bin/{0}-clang++', matrix.clang) }}
      AR: ${{ format('/opt/cctools/bin/{0}-apple-darwin11-ar', matrix.compiler_arch) }}
      RANLIB: ${{ format('/opt/cctools/bin/{0}-apple-darwin11-ranlib', matrix.compiler_arch) }}
      LDFLAGS: ${{ format('/opt/cctools/darwin/{0}', matrix.libclang_rt) }}
    steps:
    - name: Set custom env vars
      shell: bash
      run: |
        echo "VCPKG_CACHE_7Z_URL=$DEPENDENCIES_BASE_URL/${{ matrix.package_name }}" >> $GITHUB_ENV
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Download cctools
      run: |
        cd /opt
        wget https://github.com/edo9300/cctools-build/releases/download/preview/cctools-ios.tar.xz
        tar xf cctools-ios.tar.xz
        cd cctools/bin
        ln arm-apple-darwin11-lipo -s lipo
        ln llvm-install-name-tool -s install_name_tool
    - name: Install premake
      shell: bash
      run: ./travis/install-premake5.sh
    - name: Install dependencies
      shell: bash
      run: ./travis/dependencies.sh
    - name: Build
      shell: bash
      run: ./travis/build.sh
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - uses: actions/upload-artifact@v4
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      with:
        name: ${{ matrix.deploy_name }}
        path: ${{ format('bin/{0}/release/ygoprodll.app', matrix.premake_arch) }}
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Ios-universal-cctools:
    runs-on: ubuntu-latest
    env:
      DEPLOY_BRANCH: travis-ios-universal-cctools
      TRAVIS_OS_NAME: linux
      TARGET_OS: ios
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs: [ Ios-cctools ]
    steps:
    - uses: actions/checkout@v1
      with:
        ref: ${{ github.head_ref }}
        repository: ${{github.event.pull_request.head.repo.full_name}}
        fetch-depth: 1
    - name: Download osx artifacts
      uses: actions/download-artifact@v4
    - name: Download lipo binary
      run: |
        wget https://github.com/edo9300/cctools-build/releases/download/preview/lipo
        chmod +x lipo
        ./lipo -create -output ygoprodll ./ios-cctools/ygoprodll.app ./ios-armv7-cctools/ygoprodll.app
        mkdir -p bin/release && cp ygoprodll bin/release/ygoprodll.app && chmod +x bin/release/ygoprodll.app
    - name: Predeploy
      shell: bash
      run: ./travis/predeploy.sh
    - name: Deploy
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      shell: bash
      run: ./travis/deploy.sh
    - name: Delete artifacts
      uses: geekyeggo/delete-artifact@v4
      with:
        name: |
            ios-cctools
            ios-armv7-cctools
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Notify-success:
    runs-on: ubuntu-latest
    needs: [ Windows, Linux-gcc-7-5-0, Mac-os-universal-cctools ]
    steps:
    - name: Log Success
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] Build EDOPro success on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0x0f9826
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github
